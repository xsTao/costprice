<?xml version="1.0" encoding="gbk"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

				
    <!-- 环境变量 -->
    <bean id="context" class="nc.vo.uif2.LoginContext" />

    <!-- 模型部分配置 -->
    
    <!-- 单据操作代理 -->
	<bean id="maintainProxy" class="nc.ui.mapub.costpricebase.serviceproxy.CostPriceBaseMaintainProxy" />
	<!-- 单据删除代理，支持批操作 -->
	<bean id="deleteProxy" class="nc.ui.mapub.costpricebase.serviceproxy.CostPriceBaseDeleteProxy" />
	<!-- 单据查询代理 -->
	<bean id="queryProxy" class="nc.ui.mapub.costpricebase.serviceproxy.CostPriceBaseQueryProxy" />
	<!-- 分页代理 -->
	<bean id="paginationProxy" class="nc.ui.mapub.costpricebase.serviceproxy.CostPriceBasePaginationProxy" />
    
    <!-- 对象转换器工厂，由此获取操作对象的特征信息 -->
	<bean id="boadatorfactory"
		class="nc.ui.pubapp.uif2app.view.value.AggVOMetaBDObjectAdapterFactory" />

    <!-- 管理应用模型 -->
	<bean id="manageAppModel" class="nc.ui.pubapp.uif2app.model.BillManageModel">
		<property name="businessObjectAdapterFactory" ref="boadatorfactory"></property>
		<property name="context" ref="context"></property>
	</bean>
	
	<!-- 数据模型管理器，主要负责各种方式的模型初始化 -->
	<bean id="modelDataManager" class="nc.ui.pubapp.uif2app.query2.model.ModelDataManager">
		<property name="model" ref="manageAppModel"></property>
		<property name="service" ref="queryProxy"></property>
		<property name="paginationModel" ref="paginationmodel"></property>
		<property name="pageQueryService" ref="pageQueryService" />
    </bean>
    
	<bean id="pageQueryService" class="nc.ui.pubapp.uif2app.model.pagination.UIPageQueryService">
		<property name="allPagePkQueryServiceMethod" value="nc.itf.mapub.ICostPriceBasePaginationService.queryPKs"></property>
		<property name="dataOfPksQueryServiceMethod" value="nc.itf.mapub.ICostPriceBasePaginationService.queryBillByPK"></property>
	</bean>		
	
    <!-- 模板容器，负责对模板的统一装载 -->
	<bean id="templateContainer" class="nc.ui.pubapp.uif2app.view.TemplateContainer">
		<property name="context" ref="context" />
	</bean>
    
    <!-- 查询模板加载bean -->
	<bean id="queryTemplateContainer" class="nc.ui.uif2.editor.QueryTemplateContainer">
		<property name="context" ref="context"></property>
	</bean>
	
    <!-- 界面元素 -->
    <!-- 列表视图 -->
    <bean id="listView" class="nc.ui.mapub.costpricebase.view.CostPriceListView"
        init-method="initUI">
        <property name="model" ref="manageAppModel"/>
        <!-- <property name="billListPanelValueSetter" ref="materialPriceBillListPanelValueSetter" /> -->
		<property name="templateContainer" ref="templateContainer"/>
		<property name="south" ref="paginationBar"></property>
        <!-- 列表自定义项处理 -->
		<!-- <property name="userdefitemListPreparator">
			<bean class="nc.ui.pubapp.uif2app.view.CompositeBillListDataPrepare">
				<property name="billListDataPrepares">
					<list>
						<ref bean="userdefitemlistPreparator" />
						<ref bean="bmarAsstPreparator" />表体物料属性 add by zhangchd V631EHP2
					</list>
				</property>
			</bean>
		</property> -->
    </bean>
    
    <bean id ="materialPriceBillListPanelValueSetter" class="nc.ui.mapub.costpricebase.view.CostPriceBillListPanelValueSetter">
	</bean>
    
     <!-- 列表自定义项处理 -->
	<!-- <bean name="userdefitemlistPreparator" class="nc.ui.uif2.editor.UserdefitemContainerListPreparator">
		<property name="container" ref="userdefitemContainer" />
		<property name="params">				
			<list>
				<bean class="nc.ui.uif2.editor.UserdefQueryParam">
					<property name="mdfullname" value="mapub.mapub_costprice" />
					<property name="pos" value="0" />
					<property name="prefix" value="vdef" />
				</bean>	
				<bean class="nc.ui.uif2.editor.UserdefQueryParam">
					<property name="mdfullname" value="mapub.mapub_costprice_b" />
					<property name="pos" value="1" />
					<property name="prefix" value="vbdef" />
					</bean>	
			</list>
		</property>
	</bean> -->
	<!-- 去除子表自动增行时自动增加的最后一行, 注入exceptFields实现对有默认值的项不做检查 -->
    <!--<bean id="wholefieldblankchildrenfilter"
		class="nc.ui.pubapp.uif2app.view.value.WholeFieldBlankChildrenFilter">
	   <property name="exceptFields">
		    <list>
			    <value>istatus</value>
		    </list>
	   </property>
    </bean>
    -->
    <bean id="BlankChildrenFilter"
		class="nc.ui.pubapp.uif2app.view.value.MultiFieldsBlankChildrenFilter">
		<property name="NullAssertByOr" value="false" />
		<!-- 指定用来判断空行的字段名称，可能多数情况下是物料字段 -->
		<!-- <property name="filterMap">
			<map>
				<entry>
					<key>
						页签code
						<value>itempks</value>
					</key>
					<list>
						检验是否空行字段code (材料编码)
						<value>cmaterialid</value>
					</list>
				</entry>
			</map>
		</property> -->
	</bean>
  
	<!-- 快速查询区域 -->
	<bean id="queryArea" class="nc.ui.pubapp.uif2app.tangramlayout.UEQueryAreaShell"
		init-method="initUI">
		<property name="queryAreaCreator" ref="queryAction" />
	</bean>
    <!-- 查询信息栏 -->
	<bean id="queryInfo" class="nc.ui.uif2.tangramlayout.CardLayoutToolbarPanel">
		<property name="model" ref="manageAppModel" />
	</bean>
	
    <!-- 卡片界面的工具栏和返回按钮 -->
	<bean id="cardInfoPnl" class="nc.ui.pubapp.uif2app.tangramlayout.UECardLayoutToolbarPanel">
		<property name="titleAction">
			<bean id="returnaction" class="nc.ui.pubapp.uif2app.actions.UEReturnAction">
				<property name="goComponent" ref="listView" />
				<property name="saveAction" ref="saveAction" />
				<property name="model" ref="manageAppModel" />
			</bean>
		</property>
		<property name="rightExActions">
			<list>
				<bean class="nc.ui.pub.beans.ActionsBar$ActionsBarSeparator" />
				<bean id="headZoomAction" class="nc.ui.pubapp.uif2app.actions.DefaultHeadZoomAction">
					<property name="billForm" ref="billFormEditor" />
					<property name="model" ref="manageAppModel" />
					<property name="pos" value="0" />
				</bean>
			</list>
		</property>
		<property name="model" ref="manageAppModel" />
	</bean>

   <!-- 界面布局总装 -->
	<bean id="container" class="nc.ui.uif2.TangramContainer" init-method="initUI">
		<property name="model" ref="manageAppModel" />
		<property name="tangramLayoutRoot">
			<bean class="nc.ui.uif2.tangramlayout.node.TBNode">
				<property name="showMode" value="CardLayout" />
				<property name="tabs">
					<list>
						<bean class="nc.ui.uif2.tangramlayout.node.HSNode">
							<property name="left">
								<bean class="nc.ui.uif2.tangramlayout.node.CNode">
									<property name="component" ref="queryArea" />
								</bean>
							</property>
							<property name="right">
								<bean class="nc.ui.uif2.tangramlayout.node.VSNode">
									<property name="up">
										<bean class="nc.ui.uif2.tangramlayout.node.CNode">
											<property name="component" ref="queryInfo" />
										</bean>
									</property>
									<property name="down">
										<bean class="nc.ui.uif2.tangramlayout.node.CNode">
                                          <property name="name">
			                                 <bean class="nc.ui.uif2.I18nFB">
			  	                               <property name="resDir" value="common"></property>
				                               <property name="resId" value="UC001-0000107"></property>
				                               <property name="defaultValue" value="列表"></property>
			                                 </bean>
	                                      </property>
										  <property name="component" ref="listView" />
										</bean>
									</property>
									<property name="dividerLocation" value="25f" />
								</bean>
							</property>
							<property name="dividerLocation" value="210f" />
						</bean>
						<bean class="nc.ui.uif2.tangramlayout.node.VSNode">
							<property name="up">
								<bean class="nc.ui.uif2.tangramlayout.node.CNode">
									<property name="component" ref="cardInfoPnl" />
								</bean>
							</property>
							<property name="down">
								<bean class="nc.ui.uif2.tangramlayout.node.CNode">
                                   <property name="name">
			                           <bean class="nc.ui.uif2.I18nFB">
			  	                          <property name="resDir" value="common"></property>
				                          <property name="resId" value="UC001-0000106"></property>
				                          <property name="defaultValue" value="卡片"></property>
			                           </bean>
		                            </property>
									<property name="component" ref="billFormEditor" />
								</bean>
							</property>
							<property name="dividerLocation" value="30f" />
						</bean>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	   <!-- 事件监听 -->
		<bean id="childrenPicky" class="nc.ui.pubapp.uif2app.event.ChildrenPicky">
			<property name="billform" ref="billFormEditor" />
			<property name="bodyVoClasses">
				<list>					
					<value>nc.vo.mapub.costpricebase.entity.CostPriceBodyVO</value>					
				</list>
			</property>
		</bean>
		<bean id="eventMediator" class="nc.ui.pubapp.uif2app.model.AppEventHandlerMediator">
		<property name="model" ref="manageAppModel" />
		<property name="handlerGroup">
			<list>			
			   <!-- 表头表尾字段编辑前事件 -->
				<!-- <bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event" value="nc.ui.pubapp.uif2app.event.card.CardHeadTailBeforeEditEvent" />
					<property name="handler">
						<bean class="nc.ui.mapub.costpricebase.handler.CardHeadTailBeforeEditHandler" init-method="initMap"/>
					</property>
				</bean> -->

				<!-- 表头表尾字段编辑后事件-->
				<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event" value="nc.ui.pubapp.uif2app.event.card.CardHeadTailAfterEditEvent" />
					<property name="handler">
						<bean class="nc.ui.mapub.costpricebase.handler.CardHeadTailAfterEditHandler" init-method="initMap"/>
					</property>
				</bean>
				
				<!-- 表体字段编辑前事件 -->
				<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event"
						value="nc.ui.pubapp.uif2app.event.card.CardBodyBeforeEditEvent" />
					<property name="picky" ref="childrenPicky" />
					<property name="handler">
						<bean  class="nc.ui.mapub.costpricebase.handler.CardBodyBeforeEditHandler"
							init-method="initMap" />
					</property>
				</bean>

				<!-- 表体字段编辑后事件 -->
				<!-- <bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event"
						value="nc.ui.pubapp.uif2app.event.card.CardBodyAfterEditEvent" />
					<property name="picky" ref="childrenPicky" />
					<property name="handler">
						<bean class="nc.ui.mapub.costpricebase.handler.CardBodyAfterEditHandler" init-method="initMap" />
					</property>
				</bean> -->

				<!-- 新增事件 -->
				<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event"
						value="nc.ui.pubapp.uif2app.event.billform.AddEvent" />
					<property name="handler">
						<bean class="nc.ui.mapub.costpricebase.handler.AddHandler" >
							<property name="billFormEditor" ref="billFormEditor"/>	
						</bean>
					</property> 
				</bean>

				<!-- 组织改变事件 -->
				<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event"
						value="nc.ui.pubapp.uif2app.event.OrgChangedEvent" />
					<property name="handler">
						<bean class="nc.ui.mapub.costpricebase.handler.OrgChangedHandler">
							<constructor-arg ref="billFormEditor" />
						</bean>
					</property>
				</bean>
								
				<!-- 行编辑后事件 -->
				<!--
				<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
					<property name="event"
						value="nc.ui.pubapp.uif2app.event.card.CardBodyAfterRowEditEvent" />
					<property name="handler">
						<bean class="nc.ui.cm.subitemcost.handler.BodyAfterRowEditHandler" />
					</property>
				</bean>	-->									
			</list>
		</property>
	</bean>
	
	<!-- Actions  -->
	<bean id="toftpanelActionContributors" class="nc.ui.uif2.actions.ActionContributors">
		<property name="contributors">
			<list>
				<ref bean="actionsOfList" />
				<ref bean="actionsOfCard" />
			</list>
		</property>
	</bean>

	<!-- 列表显示下的按钮 -->
	<bean id="actionsOfList" class="nc.ui.uif2.actions.StandAloneToftPanelActionContainer">
		<constructor-arg ref="listView" />
		<property name="model" ref="manageAppModel" />
		<property name="actions">
			<list>
				<ref bean="addAction" />
				<ref bean="editAction" />
				<ref bean="deleteAction" />
				<ref bean="copyAction" />
				<ref bean="separatorAction" />				
				<!-- <ref bean="pullPriceAction" />
				<ref bean="separatorAction" /> -->
				<ref bean="queryAction" />
				<ref bean="refreshAction" />
				<ref bean="separatorAction" />
				<!-- <ref bean="importExportMenu" /> -->
				<ref bean="printMenuAction" />
				<ref bean="separatorAction" />
		    </list>
		</property>
	</bean>
	
	<!-- 卡片显示下的按钮 -->
	<bean id="actionsOfCard" class="nc.ui.uif2.actions.StandAloneToftPanelActionContainer">
		<constructor-arg ref="billFormEditor" />
		<property name="model" ref="manageAppModel" />
		<!-- 此处配置的Action浏览态始终可见 -->
		<property name="actions">
			<list>
				<ref bean="addAction" />
				<ref bean="editAction" />
				<ref bean="deleteAction" />
				<ref bean="copyAction" />
				<ref bean="separatorAction" />
				<!-- <ref bean="pullPriceAction" />
				<ref bean="separatorAction" /> -->
				<ref bean="queryAction" />
				<ref bean="cardRefreshAction" />
				<ref bean="separatorAction" />
				<!-- <ref bean="importExportMenu" /> -->
				<ref bean="printMenuAction" />
				<ref bean="separatorAction" />
		    </list>
		</property>
		<!-- 此处配置的Action编辑态始终可见 -->
		<property name="editActions">
			<list>
				<ref bean="saveAction" />
				<ref bean="separatorAction" />
				<ref bean="cancelAction" />
			</list>
		</property>
	</bean>	
	
	
	<!--查询界面来源-->
	<bean id="queryBillForm" class="nc.ui.mapub.costpricebase.util.PriceSourcesQueryService">
	    <property name="billform" ref="billFormEditor" />
	</bean>
	
	<!-- 分隔按钮 -->
    <bean id="separatorAction" class="nc.funcnode.ui.action.SeparatorAction" /> 
    <!-- 显示列表的拦截器 -->
	<bean id="showListInterceptor"
		class="nc.ui.pubapp.uif2app.actions.interceptor.ShowUpComponentInterceptor">
		<property name="showUpComponent" ref="listView" />
	</bean>
	<!-- 显示卡片的拦截器 -->
	<bean id="showCardInterceptor"
		class="nc.ui.pubapp.uif2app.actions.interceptor.ShowUpComponentInterceptor">
		<property name="showUpComponent" ref="billFormEditor" />
	</bean>
	
	<!-- 拦截器：新增按钮的拦截器-->
    <bean id="addInterceptor" 
      class="nc.ui.mapub.costpricebase.interceptor.AddActionProcessor">
		<property name="model" ref="manageAppModel" />
		<property name="editor" ref="billFormEditor" />
		<!-- <property name="orgpanel" ref="orgPanel" /> -->
		<!-- <property name="priceRefPanel" ref="priceSourcesRefPanel" /> -->
		<!-- <property name="priceBodyRefPanel" ref="priceSourcesBodyRefPanel" /> -->
	</bean>
	
	<!-- 组织面板 -->
	<!-- <bean id="orgPanel" class="nc.ui.mapub.costpricebase.view.CostPriceOrgPanel"
		init-method="initUI">
		<property name="model" ref="manageAppModel" />
		<property name="dataManager" ref="modelDataManager" />
		<property name="billform" ref="billFormEditor" />
	</bean> -->
	
	<bean id="billFormEditor" class="nc.ui.mapub.costpricebase.view.CostPriceBillForm" init-method="initUI">
        <property name="model" ref="manageAppModel"></property>

        <property name="templateContainer" ref="templateContainer" />        
         <!-- 是否自动增行 -->
        <property name="autoAddLine" value="true" />
        <!-- 是否显示合计行 -->
        <property name="showTotalLine" value="false" />
       
		<property name="blankChildrenFilter">
			<!-- 简单的根据一个字段是否为空的空行过滤器 -->
			<bean
				class="nc.ui.pubapp.uif2app.view.value.SingleFieldBlankChildrenFilter">
				<!-- 指定用来判断空行的字段名称 -->
				<property name="fieldName" value="celementid" />
			</bean>
		</property>
		<!-- 表体行操作按钮注册，与表体右键菜单保持一致 -->
		<property name="bodyLineActions">
			<list>
				<!-- 提供了一组默认实现 -->
				<bean class="nc.ui.pubapp.uif2app.actions.BodyAddLineAction" />
				<bean class="nc.ui.pubapp.uif2app.actions.BodyInsertLineAction" />
				<bean class="nc.ui.pubapp.uif2app.actions.BodyDelLineAction" />
				<bean class="nc.ui.pubapp.uif2app.actions.BodyCopyLineAction" />
				<bean class="nc.ui.pubapp.uif2app.actions.BodyPasteLineAction">
					<property name="clearItems">
						<list>
							<value>celementid</value>
						</list>
					</property>
				</bean>
				<bean class="nc.ui.pubapp.uif2app.actions.BodyPasteToTailAction">
					<property name="clearItems">
						<list>
							<value>celementid</value>
						</list>
					</property>
				</bean>
				<bean class="nc.ui.pub.beans.ActionsBar$ActionsBarSeparator" />
				<bean id="bodyLineEditAction" class="nc.ui.pubapp.uif2app.actions.BodyLineEditAction" />
				<bean class="nc.ui.pub.beans.ActionsBar$ActionsBarSeparator" />
				<bean class="nc.ui.pubapp.uif2app.actions.DefaultBodyZoomAction">
					<property name="pos" value="1" />
				</bean>
			</list>
		</property>       
       	
    </bean>
	
	<!-- 新增按钮 -->
	<bean id="addAction" class="nc.ui.pubapp.uif2app.actions.AddAction">
		<property name="model" ref="manageAppModel" />

		<property name="interceptor">
			<bean
				class="nc.ui.pubapp.uif2app.actions.interceptor.CompositeActionInterceptor">
				<property name="interceptors">
					<list>
						<ref bean="addInterceptor" />
						<ref bean="showCardInterceptor" />
						<!-- <ref bean="isActivityShowInterceptor" /> -->
						<ref bean="hideOrgsInterceptor" />
						
					</list>
				</property>
			</bean>
		</property>
	</bean>
    
		<!-- 用于导入的时候 隐藏表头和表体的工厂 -->
	<bean id="hideOrgsInterceptor" class="nc.ui.mapub.costpricebase.interceptor.HideOrgsInterceptor">
		<property name="editor" ref="billFormEditor" />
	</bean>
				
    <!-- 修改按钮 -->
	<bean id="editAction" class="nc.ui.uif2.actions.EditAction">
        <property name="model" ref="manageAppModel" />
        <!-- <property name="interceptor" ref="showCardInterceptor" />-->
        <property name="interceptor">
			<bean class="nc.ui.pubapp.uif2app.actions.interceptor.CompositeActionInterceptor">
			<!-- <bean class="nc.ui.pubapp.uif2app.actions.interceptor.ShowUpComponentInterceptor"> -->
				<property name="interceptors">
					<list>
						<ref bean="editInterceptor" />
						<ref bean="showCardInterceptor" />
						<ref bean="hideOrgsInterceptor" />							
					</list>
				</property>
				<!-- <property name="showUpComponent" ref="billFormEditor" /> -->
			</bean>
		</property>
    </bean>
    
    <!-- 拦截器：修改按钮的拦截器-->
	<bean id="editInterceptor"
	 class="nc.ui.mapub.costpricebase.interceptor.EditActionProcessor">
		<property name="model" ref="manageAppModel" />
		<property name="editor" ref="billFormEditor" />
	</bean>
	
	
 	<!-- 删除按钮 -->
   <bean id="deleteAction" class="nc.ui.pubapp.uif2app.actions.DeleteAction">
    	<property name="model" ref="manageAppModel" />
        <property name="singleBillService" ref="deleteProxy" />
    </bean>
    
    <!-- 保存按钮 -->
    <bean id="saveAction" class="nc.ui.pubapp.uif2app.actions.DifferentVOSaveAction">
        <property name="model" ref="manageAppModel" />
        <property name="editor" ref="billFormEditor" />
        <property name="service" ref="maintainProxy" />    
		<property name="validationService" ref="validateService" />
   </bean>
	
    <!-- 保存组合校验 -->
    <bean id="validateService" class="nc.ui.pubapp.uif2app.validation.CompositeValidation">
        <property name="validators">
	        <list>
	             <bean class="nc.ui.pubapp.uif2app.validation.TemplateNotNullValidation">
	                  <property name="billForm" ref="billFormEditor" />
	             </bean>	
	             <ref bean="billBodyUniqueValidator" />
	        </list>
        </property>
    </bean>	
    <!-- 保存时的表体唯一性校验 （表体核算要素编码） -->
	<bean id="billBodyUniqueValidator" class="nc.ui.cmpub.framework.validation.CMBillBodyUniqueValidator">
		<property name="editor" ref="billFormEditor" />
		<property name="unionValidateBodyMap">
			<map>
			</map>
		</property>
		<property name="singleValidateBodyMap">
			<map>
				<entry key="itempks">
					<list>
						<value>celementid</value>
					</list>
				</entry>
			</map>
		</property>
	</bean>
	<!-- 取消按钮 -->
    <bean id="cancelAction" class="nc.ui.pubapp.uif2app.actions.CancelAction">
        <property name="model" ref="manageAppModel" />
    </bean>
    
     <!-- 复制 -->
	<bean id="copyAction" class="nc.ui.pubapp.uif2app.actions.CopyAction">
		<property name="model" ref="manageAppModel" />
        <property name="interceptor" ref="showCardInterceptor" />
		<property name="editor" ref="billFormEditor" />
		<property name="copyActionProcessor">
		<bean class="nc.ui.mapub.costpricebase.interceptor.CopyActionProcessor"></bean>
		</property>
	</bean>
 	<!-- 会计期间 -->
	<bean class="nc.ui.pubapp.uif2app.event.EventHandlerGroup">
		<property name="event" value="nc.ui.uif2.AppEvent" />
		<property name="handler">
			<bean class="nc.ui.cmpub.framework.eventhandler.CMPeriodHandler">
				<property name="billListView" ref="listView" />
				<property name="periodKey" value="vperiod" />
			</bean>
		</property>
	</bean>
	
	<!-- 查询初始化 -->
	<bean id="qryCondInitializer" class="nc.ui.mapub.costpricebase.query.CostPriceQueryConditionInitializer" />
	
	<!-- 查询按钮 -->
	<bean id="queryAction" class="nc.ui.pubapp.uif2app.query2.action.DefaultQueryAction">
		<property name="model" ref="manageAppModel" />
		<property name="dataManager" ref="modelDataManager" />
		<property name="qryCondDLGInitializer" ref="qryCondInitializer" />
		<property name="showUpComponent" ref="listView" />
		<property name="templateContainer" ref="queryTemplateContainer" />
	</bean>

	<!-- 列表下刷新 -->
	<bean id="refreshAction" class="nc.ui.pubapp.uif2app.query2.action.DefaultRefreshAction">
		<property name="dataManager" ref="modelDataManager" />
		<property name="model" ref="manageAppModel" />
	</bean>

	<!-- 卡片下刷新 -->
	<bean id="cardRefreshAction" class="nc.ui.pubapp.uif2app.actions.RefreshSingleAction">
		<property name="model" ref="manageAppModel" />
	</bean>
	
    <!-- 打印 -->
	<bean id="printAction" class="nc.ui.pubapp.uif2app.actions.MetaDataBasedPrintAction">
		<property name="preview" value="false" />
		<property name="model" ref="manageAppModel" />
		<property name="beforePrintDataProcess" ref="printProcessor"/>	
	</bean>
	
	<!-- 预览 -->
	<bean id="previewAction" class="nc.ui.pubapp.uif2app.actions.MetaDataBasedPrintAction">
		<property name="preview" value="true" />
		<property name="model" ref="manageAppModel" />
		<property name="beforePrintDataProcess" ref="printProcessor"/>	
	</bean>
	
	<!-- 输出 -->
	<bean id="outputAction" class="nc.ui.pubapp.uif2app.actions.OutputAction">
		<property name="model" ref="manageAppModel" />
		<property name="parent" ref="billFormEditor" />
		<property name="beforePrintDataProcess" ref="printProcessor"/>
	</bean>
	
	<!-- 打印按钮组 -->
	<bean id="printMenuAction" class="nc.funcnode.ui.action.GroupAction">
		<property name="code" value="printMenuAction" />
        <property name="name">
			<bean class="nc.ui.uif2.I18nFB">
			  	<property name="resDir" value="common"></property>
				<property name="resId" value="UC001-0000007"></property>
				<property name="defaultValue" value="打印"></property>
			</bean>
		</property>
		<property name="actions">
			<list>
				<ref bean="printAction" />
				<ref bean="previewAction" />
				<ref bean="outputAction" />
			</list>
		</property>
	</bean>
	
	<!-- 打印精度处理器、用于注册精度监听 -->	
	<bean id="printProcessor" class="nc.ui.mapub.costpricebase.scale.CostPriceBasePrintScaleProcessor">
		<property name="model" ref="manageAppModel" />
	</bean>
		    
 <!-- model与界面的表体排序同步组件 -->
   	<bean id="billBodySortMediator" class="nc.ui.pubapp.uif2app.model.BillBodySortMediator">
        <constructor-arg ref="manageAppModel" />
        <constructor-arg ref="billFormEditor" />
        <constructor-arg ref="listView" />
    </bean>
    
    <!-- 打开节点监听 -->
    <bean id="InitDataListener" class="nc.ui.pubapp.uif2app.model.DefaultFuncNodeInitDataListener">
        <property name="model" ref="manageAppModel"/>
        <property name="context" ref="context"></property>
        <!-- VO的类名 -->
        <property name="voClassName" value="nc.vo.mapub.costpricebase.entity.CostPriceAggVO"/>
        <!-- 打开节点节点后要显示的界面 -->
        <property name="autoShowUpComponent" ref="billFormEditor"/>
        <property name="queryAction" ref="queryAction"/>      
    </bean>
    
    <!-- 节点关闭的校验 -->
    <bean id="ClosingListener" class="nc.ui.pubapp.common.validateservice.ClosingCheck" >
        <property name="model" ref="manageAppModel"/>
        <property name="saveAction" ref="saveAction"/>
    </bean>
    
    <!-- 自动修正卡片界面的分数显示控件(换算率) -->
    <bean id="fractionFixMediator" class="nc.ui.pubapp.uif2app.view.FractionFixMediator" init-method="initUI">
        <constructor-arg ref="billFormEditor"/>
    </bean>
    
    <!-- 双击列表行后显示卡片 -->
    <bean id="mouseClickShowPanelMediator" class="nc.ui.pubapp.uif2app.view.MouseClickShowPanelMediator">
        <property name="listView" ref="listView" />
        <property name="showUpComponent" ref="billFormEditor" />
    </bean>
    
    
    <!-- 连接数 -->
   	<bean id="remoteCallCombinatorCaller" class="nc.ui.uif2.editor.UIF2RemoteCallCombinatorCaller">
		<property name="remoteCallers">
			<list>
				<ref bean="queryTemplateContainer" />
				<ref bean="templateContainer" />
				<ref bean="userdefitemContainer" />
			</list>
		</property>
	</bean>
	
	 <!-- 懒加载 -->
    <bean id="billLazilyLoader" class="nc.ui.pubapp.uif2app.lazilyload.DefaultBillLazilyLoader" />
    <bean id="cardLazySupport" class="nc.ui.pubapp.uif2app.lazilyload.CardPanelLazilyLoad">
        <property name="billform" ref="billFormEditor" />
    </bean>
    <bean id="listLazySupport" class="nc.ui.pubapp.uif2app.lazilyload.ListPanelLazilyLoad">
        <property name="listView" ref="listView" />
    </bean>
    
    <bean id="LasilyLodadMediator" class="nc.ui.pubapp.uif2app.lazilyload.LazilyLoadManager">
        <property name="model" ref="manageAppModel" />
        <property name="loader" ref="billLazilyLoader" />
        <property name="lazilyLoadSupporter">
           <list>
               <ref bean="cardLazySupport" />
               <ref bean="listLazySupport" />
               <ref bean="lazyActions"/>
           </list>
       </property>   
    </bean>
   
    <bean id="lazyActions" class="nc.ui.pubapp.uif2app.lazilyload.ActionLazilyLoad">
       <property name="model" ref="manageAppModel" />
       <property name="actionList">
           <list>
              <ref bean="printAction" />
              <ref bean="previewAction" />
              <ref bean="outputAction" />
           </list>
       </property>
    </bean>
    
    <!-- 分页控件 -->
	<bean id="paginationBar" class="nc.ui.uif2.components.pagination.PaginationBar" init-method="registeCallbak">
		<property name="paginationModel" ref="paginationmodel"></property>
		<property name="context" ref="context" />
	</bean>

	<!-- 分页模型 -->
	<bean id="paginationmodel" class="nc.ui.uif2.components.pagination.PaginationModel" init-method="init">
		<property name="paginationQueryService" ref="paginationProxy"></property>
	</bean>  
	
	
</beans>